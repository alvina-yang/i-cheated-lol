"""
Generic commit message bank for creating realistic but non-descriptive commit history
"""

import random
from typing import List

class CommitMessageBank:
    """Bank of generic commit messages that don't indicate specific features"""
    
    def __init__(self):
        self.messages = [
            # Simple generic messages
            "work",
            "...",
            "test",
            "message",
            "idk",
            "don't work", 
            "updates",
            "fixes",
            "stuff",
            "things",
            "update",
            "fix",
            "misc",
            "wip",
            "temp",
            "save",
            "commit",
            "changes",
            "edit",
            "patch",
            "version",
            "iteration",
            "draft",
            "test",
            "trial",
            "attempt",
            "try",
            "experiment",
            "sample",
            "demo",
            "prototype",
            "sketch",
            "rough",
            "basic",
            "simple",
            "quick",
            "fast",
            "urgent",
            "needed",
            "required",
            "important",
            "critical",
            "breaking",
            "working",
            "functional",
            "stable",
            "ready",
            "done",
            "finished",
            "complete",
            "final",
            "last",
            "end",
            "stop",
            "pause",
            "continue",
            "resume",
            "start",
            "begin",
            "init",
            "setup",
            "config",
            "settings",
            "options",
            "params",
            "values",
            "data",
            "content",
            "text",
            "info",
            "details",
            "more",
            "extra",
            "additional",
            "new",
            "old",
            "latest",
            "current",
            "recent",
            "fresh",
            "clean",
            "clear",
            "empty",
            "full",
            "complete",
            "partial",
            "half",
            "almost",
            "nearly",
            "close",
            "far",
            "better",
            "worse",
            "good",
            "bad",
            "ok",
            "fine",
            "great",
            "awesome",
            "cool",
            "nice",
            "sweet",
            "neat",
            "solid",
            "smooth",
            "rough",
            "tough",
            "hard",
            "easy",
            "simple",
            "complex",
            "weird",
            "strange",
            "odd",
            "normal",
            "regular",
            "standard",
            "custom",
            "special",
            "unique",
            "rare",
            "common",
            "typical",
            "usual",
            "random",
            "mixed",
            "various",
            "multiple",
            "single",
            "one",
            "two",
            "few",
            "many",
            "all",
            "some",
            "most",
            "least",
            "best",
            "worst",
            "first",
            "last",
            "middle",
            "center",
            "side",
            "top",
            "bottom",
            "left",
            "right",
            "front",
            "back",
            "inside",
            "outside",
            "above",
            "below",
            "over",
            "under"
        ]
        
        # More descriptive but still vague messages
        self.descriptive_messages = [
            "fixed that thing",
            "made it work",
            "broke something",
            "oops",
            "this should work",
            "trying again",
            "almost there",
            "getting closer",
            "one more time",
            "final attempt",
            "last try",
            "hopefully this works",
            "please work",
            "come on",
            "why not working",
            "figured it out",
            "found the issue",
            "solved it",
            "working now",
            "finally",
            "at last",
            "success",
            "victory",
            "nailed it",
            "got it",
            "done deal",
            "mission accomplished",
            "task complete",
            "objective achieved",
            "goal reached",
            "target hit",
            "bullseye",
            "jackpot",
            "bingo",
            "eureka",
            "breakthrough",
            "progress made",
            "step forward",
            "moving along",
            "getting there",
            "on track",
            "steady progress",
            "slow and steady",
            "baby steps",
            "inch by inch",
            "bit by bit",
            "piece by piece",
            "little by little",
            "one step at a time",
            "taking it slow",
            "being careful",
            "double checking",
            "triple checking",
            "making sure",
            "verification",
            "validation",
            "confirmation",
            "approval",
            "sign off",
            "green light",
            "go ahead",
            "proceed",
            "continue",
            "keep going",
            "don't stop",
            "push forward",
            "full steam ahead",
            "pedal to the metal",
            "no turning back",
            "point of no return",
            "all or nothing",
            "do or die",
            "sink or swim",
            "make or break",
            "now or never",
            "crunch time",
            "deadline approaching",
            "time's up",
            "race against time",
            "under pressure",
            "feeling the heat",
            "in the zone",
            "on fire",
            "unstoppable",
            "momentum building",
            "gaining speed",
            "picking up pace",
            "accelerating",
            "shifting gears",
            "changing direction",
            "course correction",
            "new approach",
            "different strategy",
            "plan b",
            "backup plan",
            "contingency",
            "fallback option",
            "safety net",
            "insurance policy",
            "just in case",
            "better safe than sorry",
            "preparation is key",
            "planning ahead",
            "thinking forward",
            "future proofing",
            "laying groundwork",
            "building foundation",
            "setting stage",
            "preparing ground",
            "clearing path",
            "removing obstacles",
            "eliminating barriers",
            "opening doors",
            "creating opportunities",
            "making possibilities",
            "enabling potential",
            "unlocking power",
            "releasing energy",
            "channeling force",
            "directing effort",
            "focusing attention",
            "concentrating resources",
            "maximizing efficiency",
            "optimizing performance",
            "enhancing capabilities",
            "expanding horizons",
            "broadening scope",
            "widening perspective",
            "deepening understanding",
            "increasing knowledge",
            "growing wisdom",
            "developing skills",
            "building expertise",
            "gaining experience",
            "learning lessons",
            "discovering truth",
            "finding answers",
            "solving mysteries",
            "unraveling secrets",
            "revealing hidden",
            "exposing concealed",
            "bringing to light",
            "shedding light on",
            "illuminating darkness",
            "brightening future",
            "lighting way forward",
            "showing direction",
            "pointing path",
            "guiding journey",
            "leading expedition",
            "commanding mission",
            "directing operation",
            "managing project",
            "overseeing development",
            "supervising construction",
            "monitoring progress",
            "tracking advancement",
            "measuring improvement",
            "evaluating performance",
            "assessing quality",
            "reviewing results",
            "analyzing outcome",
            "studying effects",
            "examining impact",
            "investigating consequences",
            "exploring implications",
            "considering ramifications",
            "weighing options",
            "balancing factors",
            "juggling priorities",
            "managing resources",
            "allocating time",
            "distributing effort",
            "sharing workload",
            "dividing tasks",
            "splitting responsibilities",
            "delegating duties",
            "assigning roles",
            "defining positions",
            "establishing hierarchy",
            "creating structure",
            "building organization",
            "forming framework",
            "designing architecture",
            "planning layout",
            "arranging components",
            "organizing elements",
            "sorting items",
            "categorizing things",
            "classifying objects",
            "grouping together",
            "bringing together",
            "pulling together",
            "coming together",
            "working together",
            "collaborating effectively",
            "cooperating successfully",
            "partnering strategically",
            "allying tactically",
            "uniting forces",
            "joining efforts",
            "combining strengths",
            "merging capabilities",
            "integrating systems",
            "connecting networks",
            "linking processes",
            "binding operations",
            "tying procedures",
            "securing methods",
            "fastening approaches",
            "attaching techniques",
            "affixing strategies",
            "mounting campaigns",
            "launching initiatives",
            "starting programs",
            "beginning projects",
            "initiating processes",
            "commencing operations",
            "opening procedures",
            "activating systems",
            "engaging mechanisms",
            "triggering responses",
            "prompting actions",
            "encouraging behaviors",
            "motivating decisions",
            "inspiring choices",
            "influencing outcomes",
            "affecting results",
            "impacting performance",
            "changing dynamics",
            "altering conditions",
            "modifying circumstances",
            "adjusting parameters",
            "tuning settings",
            "calibrating instruments",
            "configuring devices",
            "programming machines",
            "coding software",
            "writing programs",
            "developing applications",
            "creating solutions",
            "building tools",
            "manufacturing products",
            "producing goods",
            "generating value",
            "delivering benefits",
            "providing services",
            "offering assistance",
            "giving support",
            "lending help",
            "extending aid",
            "reaching out",
            "stretching limits",
            "pushing boundaries",
            "breaking barriers",
            "crossing lines",
            "stepping over",
            "moving beyond",
            "going further",
            "traveling distance",
            "covering ground",
            "making headway",
            "gaining ground",
            "advancing position",
            "improving standing",
            "elevating status",
            "raising level",
            "lifting standard",
            "boosting quality",
            "enhancing value",
            "increasing worth",
            "adding benefit",
            "contributing advantage",
            "providing edge",
            "giving boost",
            "offering lift",
            "supplying push",
            "delivering force",
            "applying pressure",
            "exerting influence",
            "wielding power",
            "exercising control",
            "maintaining discipline",
            "keeping order",
            "preserving peace",
            "protecting harmony",
            "safeguarding balance",
            "securing stability",
            "ensuring consistency",
            "guaranteeing reliability",
            "promising dependability",
            "committing faithfully",
            "dedicating wholly",
            "devoting completely",
            "sacrificing totally",
            "giving everything",
            "putting all in",
            "going all out",
            "holding nothing back",
            "leaving nothing behind",
            "taking everything forward"
        ]
    
    def get_random_message(self) -> str:
        """Get a random commit message from the bank"""
        # 70% chance for simple messages, 30% for descriptive
        if random.random() < 0.7:
            return random.choice(self.messages)
        else:
            return random.choice(self.descriptive_messages)
    
    def get_message_sequence(self, count: int) -> List[str]:
        """Get a sequence of commit messages for a project"""
        messages = []
        used_messages = set()
        
        for i in range(count):
            # Try to avoid duplicates in small sequences
            attempts = 0
            while attempts < 10:  # Avoid infinite loop
                message = self.get_random_message()
                if message not in used_messages or len(used_messages) > len(self.messages) * 0.8:
                    messages.append(message)
                    used_messages.add(message)
                    break
                attempts += 1
            else:
                # If we can't find a unique message, just use a random one
                messages.append(self.get_random_message())
        
        return messages
    
    def get_hackathon_sequence(self, count: int, hackathon_duration: int) -> List[str]:
        """Get commit messages appropriate for a hackathon timeline"""
        messages = []
        
        # Early hackathon messages (setup, initial work)
        early_phase = max(1, count // 4)
        early_messages = [
            "setup", "init", "start", "begin", "basic", "foundation", 
            "initial", "first", "draft", "skeleton", "structure"
        ]
        
        # Mid hackathon messages (development, iteration)
        mid_phase = max(1, count // 2)
        mid_messages = [
            "work", "progress", "development", "iteration", "changes",
            "updates", "improvements", "fixes", "tweaks", "adjustments"
        ]
        
        # Late hackathon messages (final push, cleanup)
        late_phase = count - early_phase - mid_phase
        late_messages = [
            "final", "polish", "cleanup", "ready", "done", "complete",
            "finish", "last", "end", "submit", "deadline", "crunch"
        ]
        
        # Distribute messages across phases
        for i in range(count):
            if i < early_phase:
                phase_messages = early_messages
            elif i < early_phase + mid_phase:
                phase_messages = mid_messages
            else:
                phase_messages = late_messages
            
            # Mix with random messages for variety
            if random.random() < 0.6:
                message = random.choice(phase_messages)
            else:
                message = self.get_random_message()
            
            messages.append(message)
        
        return messages

# Global instance
commit_bank = CommitMessageBank() 